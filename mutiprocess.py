# 利用多线程处理文件，将文件转换为序列化形式并保存
import os
import json
import ast02.Logger as Logger
import ast02.utils as utils
from solidity_parser import parser

from inputcontext import fix_txt, tree2str, json_to_tree

correct_path = r'E:\Learning Materials\Peking\FIN\project_21\ast02\pickcorrectfile\file'
wrong_path = r'E:\Learning Materials\Peking\FIN\project_21\ast02\spider\file'
pre_train_path = r'E:\Learning Materials\Peking\FIN\数据集\smartbugs-wild-master\contracts'

correct_path_list = os.listdir(correct_path)
wrong_path_list = os.listdir(wrong_path)
pre_train_path_list = os.listdir(pre_train_path)

def process_file(filepath, filename, newpath):
    path = os.path.join(filepath, filename)

    with open(path, 'r') as f:
        line = f.readlines()
        if len(line) == 1:
            return
    # print(path)
    log = Logger.Loggeror()
    log.messages = []
    log.start()
    sourceUnit = parser.parse_file(path, loc=False)
    utils.pprint(sourceUnit)
    log.stop()
    message = "".join(log.messages)

    filename = filename.split('.')[0]+'.txt'
    new_path = os.path.join(newpath, filename)
    with open(new_path, "w") as f:
        f.write(message)

# for path in correct_path_list:
#     process_file(correct_path, path, 'E:\Learning Materials\Peking\FIN\project_21\dataprocess\correct')
#
# # wrong file: 106, 145, 177, 185
# for i, path in enumerate(wrong_path_list):
#     try:
#         process_file(wrong_path, path, r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\wrong')
#     except Exception as e:
#         print(i)
#
# for i, path in enumerate(pre_train_path_list):
#     try:
#         process_file(pre_train_path, path, r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\pretrain')
#     except Exception as e:
#         print(i)


correct_list = os.listdir(r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\correct')
wrong_list = os.listdir(r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\wrong')
pre_list = os.listdir(r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\pretrain')


def process_SBT(path, base):
    base = os.path.join(path, base)

    with open(base, 'r') as f:
        line = f.readlines()
        if len(line) == 1:
            return

    fix_txt(base)
    with open(base, 'r', encoding='utf-8') as f1:
        dic = json.load(f1)

    tree = json_to_tree(dic)
    string = tree2str(tree)
    with open(base, 'w', encoding='utf-8') as f2:
        f2.write(string)


# process_SBT(r'C:\Users\timing\Desktop', 'gray_approve.txt')

# for i, path in enumerate(correct_list):
#     try:
#         process_SBT(r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\correct', path)
#     except Exception as e:
#         print(i, e)
#

"""
39 Expecting value: line 1634 column 54 (char 168192)
41 Expecting value: line 817 column 83 (char 71589)
48 Expecting value: line 836 column 83 (char 74255)
55 Expecting value: line 2147 column 107 (char 196428)
96 Expecting value: line 2326 column 83 (char 227268)
105 Expecting value: line 2100 column 78 (char 230986)
109 Expecting value: line 1405 column 54 (char 132183)
142 Expecting property name enclosed in double quotes: line 11368 column 54 (char 1148642)
150 Expecting property name enclosed in double quotes: line 11376 column 54 (char 1149421)
154 Expecting value: line 3575 column 78 (char 309823)
155 Expecting value: line 4490 column 84 (char 427708)
158 Expecting value: line 817 column 83 (char 71575)
161 Expecting value: line 4490 column 84 (char 427706)
214 Expecting property name enclosed in double quotes: line 11382 column 54 (char 1150508)
218 Expecting value: line 3400 column 83 (char 340802)
224 Expecting value: line 3161 column 83 (char 318939)
240 Expecting value: line 4490 column 84 (char 427708)
248 Expecting value: line 4850 column 83 (char 438028)
259 Expecting value: line 817 column 83 (char 71576)
272 Expecting value: line 783 column 54 (char 68486)
317 Expecting value: line 995 column 83 (char 97938)
326 Expecting value: line 817 column 83 (char 71584)
365 Expecting value: line 274 column 83 (char 21849)
367 Expecting value: line 3385 column 78 (char 303722)
368 Expecting value: line 1812 column 54 (char 155360)
395 Expecting value: line 1372 column 84 (char 119350)
437 Expecting value: line 4490 column 84 (char 427708)
451 Expecting value: line 2240 column 83 (char 211122)
458 Expecting value: line 4490 column 84 (char 427708)
466 Expecting value: line 983 column 54 (char 89618)
489 Expecting value: line 4649 column 83 (char 421100)
495 Expecting value: line 296 column 83 (char 24186)
"""
# for i, path in enumerate(wrong_list):
#     try:
#         process_SBT(r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\wrong', path)
#     except Exception as e:
#         print(i, e)

for i, path in enumerate(pre_list):
    try:
        process_SBT(r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\pretrain', path)
    except Exception as e:
        del_path = os.path.join(r'E:\Learning Materials\Peking\FIN\project_21\dataprocess\pretrain', path)
        os.remove(del_path)
        print("已经删除：", path)